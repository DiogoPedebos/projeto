
Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  NotFoundError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime
} = require('@prisma/client/runtime/wasm.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 5.20.0
 * Query Engine version: 06fc58a368dc7be9fbbbe894adf8d445d208c284
 */
Prisma.prismaVersion = {
  client: "5.20.0",
  engine: "06fc58a368dc7be9fbbbe894adf8d445d208c284"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.NotFoundError = NotFoundError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.MetadadosScalarFieldEnum = {
  id: 'id',
  modelrunUpdatetimeUtc: 'modelrunUpdatetimeUtc',
  nome: 'nome',
  altura: 'altura',
  abreviacaoFusoHorario: 'abreviacaoFusoHorario',
  latitude: 'latitude',
  modelrunUtc: 'modelrunUtc',
  longitude: 'longitude',
  offsetHorarioUtc: 'offsetHorarioUtc',
  tempoGeracaoMs: 'tempoGeracaoMs'
};

exports.Prisma.UnidadesScalarFieldEnum = {
  id: 'id',
  previsibilidade: 'previsibilidade',
  precipitacao: 'precipitacao',
  velocidadeDoVento: 'velocidadeDoVento',
  probabilidadeDePrecipitacao: 'probabilidadeDePrecipitacao',
  umidadeRelativa: 'umidadeRelativa',
  tempo: 'tempo',
  temperatura: 'temperatura',
  pressao: 'pressao',
  direcaoDoVento: 'direcaoDoVento'
};

exports.Prisma.DadosAtuaisScalarFieldEnum = {
  id: 'id',
  tempo: 'tempo',
  dadosObservados: 'dadosObservados',
  metarid: 'metarid',
  ehDia: 'ehDia',
  velocidadeDoVento: 'velocidadeDoVento',
  anguloDeZenite: 'anguloDeZenite',
  pictocodeDetalhado: 'pictocodeDetalhado',
  pictocode: 'pictocode',
  temperatura: 'temperatura'
};

exports.Prisma.DadosDiariosScalarFieldEnum = {
  id: 'id',
  tempo: 'tempo',
  temperaturaInstantanea: 'temperaturaInstantanea',
  precipitacao: 'precipitacao',
  previsibilidade: 'previsibilidade',
  temperaturaMaxima: 'temperaturaMaxima',
  pressaoMediaNivelDoMar: 'pressaoMediaNivelDoMar',
  velocidadeDoVentoMedia: 'velocidadeDoVentoMedia',
  horasDePrecipitacao: 'horasDePrecipitacao',
  pressaoMinimaNivelDoMar: 'pressaoMinimaNivelDoMar',
  pictocode: 'pictocode',
  fracaoDeNeve: 'fracaoDeNeve',
  horasComUmidadeMaior90: 'horasComUmidadeMaior90',
  precipitacaoConvectiva: 'precipitacaoConvectiva',
  umidadeRelativaMaxima: 'umidadeRelativaMaxima',
  temperaturaMinima: 'temperaturaMinima',
  direcaoDoVento: 'direcaoDoVento',
  temperaturaSensacaoMaxima: 'temperaturaSensacaoMaxima',
  umidadeRelativaMinima: 'umidadeRelativaMinima',
  temperaturaSensacaoMedia: 'temperaturaSensacaoMedia',
  velocidadeDoVentoMinima: 'velocidadeDoVentoMinima',
  temperaturaSensacaoMinima: 'temperaturaSensacaoMinima',
  probabilidadeDePrecipitacao: 'probabilidadeDePrecipitacao',
  indiceUv: 'indiceUv',
  manchasDeChuva: 'manchasDeChuva',
  temperaturaMedia: 'temperaturaMedia',
  pressaoMaximaNivelDoMar: 'pressaoMaximaNivelDoMar',
  umidadeRelativaMedia: 'umidadeRelativaMedia',
  classeDePrevisibilidade: 'classeDePrevisibilidade',
  velocidadeDoVentoMaxima: 'velocidadeDoVentoMaxima'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  Metadados: 'Metadados',
  Unidades: 'Unidades',
  DadosAtuais: 'DadosAtuais',
  DadosDiarios: 'DadosDiarios'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\Diogo\\Desktop\\codigo\\projeto\\backend\\node_modules\\@prisma\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [
      "driverAdapters"
    ],
    "sourceFilePath": "C:\\Users\\Diogo\\Desktop\\codigo\\projeto\\backend\\src\\prisma\\schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../src/.env"
  },
  "relativePath": "../../../src/prisma",
  "clientVersion": "5.20.0",
  "engineVersion": "06fc58a368dc7be9fbbbe894adf8d445d208c284",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider        = \"prisma-client-js\"\n  previewFeatures = [\"driverAdapters\"]\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel Metadados {\n  id                    Int      @id @default(autoincrement())\n  modelrunUpdatetimeUtc DateTime\n  nome                  String?\n  altura                Int?\n  abreviacaoFusoHorario String?\n  latitude              Float?\n  modelrunUtc           DateTime\n  longitude             Float?\n  offsetHorarioUtc      Float?\n  tempoGeracaoMs        Float?\n}\n\nmodel Unidades {\n  id                          Int     @id @default(autoincrement())\n  previsibilidade             String?\n  precipitacao                String?\n  velocidadeDoVento           String?\n  probabilidadeDePrecipitacao String?\n  umidadeRelativa             String?\n  tempo                       String?\n  temperatura                 String?\n  pressao                     String?\n  direcaoDoVento              String?\n}\n\nmodel DadosAtuais {\n  id                 Int      @id @default(autoincrement())\n  tempo              DateTime\n  dadosObservados    Boolean?\n  metarid            String?\n  ehDia              Boolean?\n  velocidadeDoVento  Float?\n  anguloDeZenite     Float?\n  pictocodeDetalhado Int?\n  pictocode          Int?\n  temperatura        Float?\n}\n\nmodel DadosDiarios {\n  id                          Int      @id @default(autoincrement())\n  tempo                       DateTime\n  temperaturaInstantanea      Float?\n  precipitacao                Float?\n  previsibilidade             Int?\n  temperaturaMaxima           Float?\n  pressaoMediaNivelDoMar      Float?\n  velocidadeDoVentoMedia      Float?\n  horasDePrecipitacao         Float?\n  pressaoMinimaNivelDoMar     Float?\n  pictocode                   Int?\n  fracaoDeNeve                Float?\n  horasComUmidadeMaior90      Float?\n  precipitacaoConvectiva      Float?\n  umidadeRelativaMaxima       Int?\n  temperaturaMinima           Float?\n  direcaoDoVento              Int?\n  temperaturaSensacaoMaxima   Float?\n  umidadeRelativaMinima       Int?\n  temperaturaSensacaoMedia    Float?\n  velocidadeDoVentoMinima     Float?\n  temperaturaSensacaoMinima   Float?\n  probabilidadeDePrecipitacao Float?\n  indiceUv                    Int?\n  manchasDeChuva              String?\n  temperaturaMedia            Float?\n  pressaoMaximaNivelDoMar     Float?\n  umidadeRelativaMedia        Int?\n  classeDePrevisibilidade     Float?\n  velocidadeDoVentoMaxima     Float?\n}\n",
  "inlineSchemaHash": "ce9c3e17eb0c07bea2b6c9deeaf27fc2f5b019c436d29dcf2392bf26bbf18032",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Metadados\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"modelrunUpdatetimeUtc\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"nome\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"altura\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"abreviacaoFusoHorario\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"latitude\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"modelrunUtc\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"longitude\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"offsetHorarioUtc\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"tempoGeracaoMs\",\"kind\":\"scalar\",\"type\":\"Float\"}],\"dbName\":null},\"Unidades\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"previsibilidade\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"precipitacao\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"velocidadeDoVento\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"probabilidadeDePrecipitacao\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"umidadeRelativa\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tempo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"temperatura\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"pressao\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"direcaoDoVento\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"DadosAtuais\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"tempo\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"dadosObservados\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"metarid\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ehDia\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"velocidadeDoVento\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"anguloDeZenite\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"pictocodeDetalhado\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"pictocode\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"temperatura\",\"kind\":\"scalar\",\"type\":\"Float\"}],\"dbName\":null},\"DadosDiarios\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"tempo\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"temperaturaInstantanea\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"precipitacao\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"previsibilidade\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"temperaturaMaxima\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"pressaoMediaNivelDoMar\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"velocidadeDoVentoMedia\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"horasDePrecipitacao\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"pressaoMinimaNivelDoMar\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"pictocode\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"fracaoDeNeve\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"horasComUmidadeMaior90\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"precipitacaoConvectiva\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"umidadeRelativaMaxima\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"temperaturaMinima\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"direcaoDoVento\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"temperaturaSensacaoMaxima\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"umidadeRelativaMinima\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"temperaturaSensacaoMedia\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"velocidadeDoVentoMinima\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"temperaturaSensacaoMinima\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"probabilidadeDePrecipitacao\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"indiceUv\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"manchasDeChuva\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"temperaturaMedia\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"pressaoMaximaNivelDoMar\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"umidadeRelativaMedia\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"classeDePrevisibilidade\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"velocidadeDoVentoMaxima\",\"kind\":\"scalar\",\"type\":\"Float\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine 
  }
}

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

